<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.cgi</groupId>
	<artifactId>points-card</artifactId>
	<version>1.3.1</version>
	<packaging>jar</packaging>
	<name>Points Card</name>

	<properties>
		<!-- Version of atg we are using. This is used to pull dependencies. -->
		<atg.version>11.3</atg.version>
		<!-- Path to root of ATG installation. -->
		<atg.root>${env.ATG_ROOT}</atg.root>
		<!-- This is the top level ATG module that will be created. -->
		<atg.module.name>PointsCard</atg.module.name>
		<!-- This is used by submodules to determine where they go on the filesystem. -->
		<atg.module.home>${atg.root}/${atg.module.name}</atg.module.home>

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<!-- Our MANIFEST.MF in EStore contains Build-Date: ${timestamp} -->
		<!-- Filtering will take this value and replace the variable in the MANIFEST 
			when maven executes -->
		<timestamp>${maven.build.timestamp}</timestamp>
		<maven.build.timestamp.format>yyyy-MM-dd HH:mm</maven.build.timestamp.format>
		<!-- Used to populate ATG-Build in MANIFEST.MF. You can use this to track 
			different code versions. -->
		<!-- This will show up as Build Number in /dyn/admin under what's running -->
		<build.number>123</build.number>
	</properties>

	<dependencies>
		<dependency>
			<groupId>atg</groupId>
			<artifactId>DAS-classes</artifactId>
			<version>${atg.version}</version>
		</dependency>
		<dependency>
			<groupId>atg</groupId>
			<artifactId>DAS-resources</artifactId>
			<version>${atg.version}</version>
		</dependency>
		<dependency>
			<groupId>atg</groupId>
			<artifactId>DPS-classes</artifactId>
			<version>${atg.version}</version>
		</dependency>
		<dependency>
			<groupId>atg</groupId>
			<artifactId>DPS-resources</artifactId>
			<version>${atg.version}</version>
		</dependency>
		<dependency>
			<groupId>atg</groupId>
			<artifactId>DSS-classes</artifactId>
			<version>${atg.version}</version>
		</dependency>
		<dependency>
			<groupId>atg</groupId>
			<artifactId>DSS-resources</artifactId>
			<version>${atg.version}</version>
		</dependency>
		<dependency>
			<groupId>atg</groupId>
			<artifactId>DCS-classes</artifactId>
			<version>${atg.version}</version>
		</dependency>
		<dependency>
			<groupId>atg</groupId>
			<artifactId>DCS-resources</artifactId>
			<version>${atg.version}</version>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.14</version>
		</dependency>
		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
			<version>1.2.2</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<version>1.8.0.1</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.4</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jsp-api</artifactId>
			<version>2.0</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>1.4</version>
		</dependency>
		<dependency>
			<groupId>org.apache.derby</groupId>
			<artifactId>derby</artifactId>
			<version>10.4.2.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.ddlutils</groupId>
			<artifactId>ddlutils</artifactId>
			<version>1.0</version>
		</dependency>

		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<version>1.0.0.GA</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib-nodep</artifactId>
			<version>2.1_3</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.oracle.ateam</groupId>
			<artifactId>ateamDust</artifactId>
			<version>1.3.1</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<!-- This tells maven to include files under the src/main/java tree with 
			extensions other than the default .java/.class -->
		<!-- Without this, properties files in the src/main/java tree would not 
			be included. -->
		<resources>
			<resource>
				<directory>src/main/java</directory>
				<includes>
					<include>**/*.properties</include>
				</includes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
			</testResource>
			<testResource>
				<directory>src/main/config</directory>
			</testResource>
		</testResources>
		<pluginManagement>
			<plugins>
				<plugin>
					<!-- Compile source code -->
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.3</version>
					<configuration>
						<source>1.7</source>
						<target>1.7</target>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<configuration>
						<includeEmptyDirs>true</includeEmptyDirs>
					</configuration>
					<executions>
						<execution>
							<!-- Copy MANIFEST.MF to the proper location in ATG_ROOT so this is 
								setup as an ATG module -->
							<id>copy-module-manifest</id>
							<phase>process-resources</phase>
							<goals>
								<goal>copy-resources</goal>
							</goals>
							<configuration>
								<outputDirectory>${atg.module.home}</outputDirectory>
								<overwrite>true</overwrite>
								<resources>
									<resource>
										<directory>src/main/module</directory>
										<!-- You can use filtering if you want to include a custom field 
											in the manifest -->
										<filtering>true</filtering>
									</resource>
								</resources>
							</configuration>
						</execution>
						<execution>
							<!-- Copy our liveconfig layer to the module directory -->
							<id>copy-liveconfig-layer</id>
							<phase>process-resources</phase>
							<goals>
								<goal>copy-resources</goal>
							</goals>
							<configuration>
								<outputDirectory>${atg.module.home}</outputDirectory>
								<overwrite>true</overwrite>
								<resources>
									<resource>
										<directory>src/main/</directory>
										<includes>
											<include>liveconfig/**</include>
										</includes>
									</resource>
								</resources>
							</configuration>
						</execution>
						<execution>
							<!-- Copy extra configlayers to the module directory -->
							<id>copy-configlayers</id>
							<phase>process-resources</phase>
							<goals>
								<goal>copy-resources</goal>
							</goals>
							<configuration>
								<outputDirectory>${atg.module.home}</outputDirectory>
								<overwrite>true</overwrite>
								<resources>
									<resource>
										<directory>src/main/</directory>
										<includes>
											<include>configlayers/**</include>
										</includes>
									</resource>
								</resources>
							</configuration>
						</execution>
						<execution>
							<!-- Copy j2ee trees to the module directory -->
							<id>copy-j2ee-app</id>
							<phase>process-resources</phase>
							<goals>
								<goal>copy-resources</goal>
							</goals>
							<configuration>
								<outputDirectory>${atg.module.home}/j2ee-apps</outputDirectory>
								<overwrite>true</overwrite>
								<resources>
									<resource>
										<directory>src/main/j2ee-apps</directory>
										<includes>
											<include>*/**</include>
										</includes>
									</resource>
								</resources>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<!-- Bundle classes.jar, config.jar, resources.jar -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>2.6</version>
					<executions>
						<execution>
							<id>create-classes-jar</id>
							<phase>process-classes</phase>
							<goals>
								<goal>jar</goal>
							</goals>
							<configuration>
								<skipIfEmpty>true</skipIfEmpty>
								<classesDirectory>target/classes</classesDirectory>
								<finalName>classes</finalName>
								<outputDirectory>${atg.module.home}/lib</outputDirectory>
								<archive>
									<!-- Add a timestamp to our manifest showing when this was built -->
									<!-- You can add any other fields you want here. Common examples: 
										build number, source control revision number, branch name -->
									<manifest>
										<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
									</manifest>
									<manifestEntries>
										<Build-Time>${maven.build.timestamp}</Build-Time>
									</manifestEntries>
								</archive>
							</configuration>
						</execution>
						<execution>
							<id>create-config-jar</id>
							<phase>process-classes</phase>
							<goals>
								<goal>jar</goal>
							</goals>
							<configuration>
								<skipIfEmpty>true</skipIfEmpty>
								<classesDirectory>src/main/config</classesDirectory>
								<finalName>config</finalName>
								<outputDirectory>${atg.module.home}/config</outputDirectory>
								<archive>
									<manifest>
										<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
									</manifest>
									<manifestEntries>
										<Build-Time>${maven.build.timestamp}</Build-Time>
									</manifestEntries>
								</archive>
							</configuration>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<!-- Copy dependencies to the module lib directory. -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.10</version>
				<configuration>
					<includeScope>runtime</includeScope>
					<excludeTransitive>true</excludeTransitive>
					<outputDirectory>${atg.module.home}/lib</outputDirectory>
				</configuration>
			</plugin>
			<plugin>
				<!-- Will be used to copy resources. -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.7</version>
			</plugin>
			<plugin>
				<!-- Plugin that calls runAssembler to build ear files. -->
				<groupId>com.oracle.atg.ateam</groupId>
				<artifactId>atg-runAssembler-plugin</artifactId>
				<version>1.0</version>
			</plugin>
			<plugin>
				<!-- This is the configuration for the weblogic-maven-plugin -->
				<groupId>com.oracle.weblogic</groupId>
				<artifactId>wls-maven-plugin</artifactId>
				<version>12.1.2.0</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.17</version>
				<configuration>
					<environmentVariables>
						<DYNAMO_ROOT>${atg.root}</DYNAMO_ROOT>
						<DYNAMO_HOME>${atg.root}/home</DYNAMO_HOME>
					</environmentVariables>
					<forkCount>0</forkCount>
					<useSystemClassLoader>false</useSystemClassLoader>
					<systemPropertyVariables>
						<java.awt.headless>true</java.awt.headless>
					</systemPropertyVariables>
				</configuration>
			</plugin>
			<plugin>
				<!-- This cleans our atg.module directory when we run mvn clean. -->
				<!-- This needs to be explicitly done since it is outside the maven default 
					target directory. -->
				<artifactId>maven-clean-plugin</artifactId>
				<version>3.0.0</version>
				<configuration>
					<filesets>
						<fileset>
							<directory>${atg.module.home}</directory>
							<includes>
								<include>**</include>
							</includes>
							<followSymlinks>false</followSymlinks>
						</fileset>
					</filesets>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
